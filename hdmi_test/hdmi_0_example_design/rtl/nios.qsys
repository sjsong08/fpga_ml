<?xml version="1.0" encoding="UTF-8"?>
<system name="$${FILENAME}">
 <component
   name="$${FILENAME}"
   displayName="$${FILENAME}"
   version="1.0"
   description=""
   tags=""
   categories=""
   tool="QsysPro" />
 <parameter name="bonusData"><![CDATA[bonusData 
{
   element color_depth_pio
   {
      datum _sortIndex
      {
         value = "0";
         type = "int";
      }
   }
   element cpu
   {
      datum _sortIndex
      {
         value = "1";
         type = "int";
      }
   }
   element cpu_clk
   {
      datum _sortIndex
      {
         value = "2";
         type = "int";
      }
   }
   element cpu_ram
   {
      datum _sortIndex
      {
         value = "3";
         type = "int";
      }
   }
   element edid_ram_access_pio
   {
      datum _sortIndex
      {
         value = "19";
         type = "int";
      }
   }
   element edid_ram_slave_translator
   {
      datum _sortIndex
      {
         value = "20";
         type = "int";
      }
   }
   element jtag_uart_0
   {
      datum _sortIndex
      {
         value = "4";
         type = "int";
      }
   }
   element measure_pio
   {
      datum _sortIndex
      {
         value = "5";
         type = "int";
      }
   }
   element measure_valid_pio
   {
      datum _sortIndex
      {
         value = "6";
         type = "int";
      }
   }
   element oc_i2c_master_av_slave_translator
   {
      datum _sortIndex
      {
         value = "7";
         type = "int";
      }
   }
   element oc_i2c_master_ti
   {
      datum _sortIndex
      {
         value = "8";
         type = "int";
      }
   }
   element sysid_qsys_0
   {
      datum _sortIndex
      {
         value = "9";
         type = "int";
      }
   }
   element tmds_bit_clock_ratio_pio
   {
      datum _sortIndex
      {
         value = "10";
         type = "int";
      }
   }
   element tx_hpd_ack_pio
   {
      datum _sortIndex
      {
         value = "11";
         type = "int";
      }
   }
   element tx_hpd_req_pio
   {
      datum _sortIndex
      {
         value = "12";
         type = "int";
      }
   }
   element tx_iopll_rcfg_mgmt_translator
   {
      datum _sortIndex
      {
         value = "13";
         type = "int";
      }
   }
   element tx_iopll_waitrequest_pio
   {
      datum _sortIndex
      {
         value = "14";
         type = "int";
      }
   }
   element tx_os_pio
   {
      datum _sortIndex
      {
         value = "15";
         type = "int";
      }
   }
   element tx_pll_rcfg_mgmt_translator
   {
      datum _sortIndex
      {
         value = "21";
         type = "int";
      }
   }
   element tx_pll_waitrequest_pio
   {
      datum _sortIndex
      {
         value = "22";
         type = "int";
      }
   }
   element tx_pma_cal_busy_pio
   {
      datum _sortIndex
      {
         value = "16";
         type = "int";
      }
   }
   element tx_pma_ch
   {
      datum _sortIndex
      {
         value = "17";
         type = "int";
      }
   }
   element tx_pma_rcfg_mgmt_translator
   {
      datum _sortIndex
      {
         value = "23";
         type = "int";
      }
   }
   element tx_pma_waitrequest_pio
   {
      datum _sortIndex
      {
         value = "24";
         type = "int";
      }
   }
   element tx_rcfg_en_pio
   {
      datum _sortIndex
      {
         value = "18";
         type = "int";
      }
   }
   element tx_rst_pll_pio
   {
      datum _sortIndex
      {
         value = "25";
         type = "int";
      }
   }
   element tx_rst_xcvr_pio
   {
      datum _sortIndex
      {
         value = "26";
         type = "int";
      }
   }
   element wd_timer
   {
      datum _sortIndex
      {
         value = "27";
         type = "int";
      }
   }
}
]]></parameter>
 <parameter name="clockCrossingAdapter" value="AUTO" />
 <parameter name="device" value="10CX220YF780E5G" />
 <parameter name="deviceFamily" value="Cyclone 10 GX" />
 <parameter name="deviceSpeedGrade" value="5" />
 <parameter name="fabricMode" value="QSYS" />
 <parameter name="generateLegacySim" value="false" />
 <parameter name="generationId" value="0" />
 <parameter name="globalResetBus" value="false" />
 <parameter name="hdlLanguage" value="VERILOG" />
 <parameter name="hideFromIPCatalog" value="false" />
 <parameter name="lockedInterfaceDefinition" value="" />
 <parameter name="maxAdditionalLatency" value="1" />
 <parameter name="sopcBorderPoints" value="false" />
 <parameter name="systemHash" value="0" />
 <parameter name="systemInfos"><![CDATA[<systemInfosDefinition>
    <connPtSystemInfos>
        <entry>
            <key>clk</key>
            <value>
                <connectionPointName>clk</connectionPointName>
                <suppliedSystemInfos>
                    <entry>
                        <key>CLOCK_RATE</key>
                    </entry>
                </suppliedSystemInfos>
                <consumedSystemInfos/>
            </value>
        </entry>
        <entry>
            <key>cpu</key>
            <value>
                <connectionPointName>cpu</connectionPointName>
                <suppliedSystemInfos>
                    <entry>
                        <key>CLOCK_RATE</key>
                    </entry>
                </suppliedSystemInfos>
                <consumedSystemInfos/>
            </value>
        </entry>
    </connPtSystemInfos>
</systemInfosDefinition>]]></parameter>
 <parameter name="systemScripts" value="" />
 <parameter name="testBenchDutName" value="" />
 <parameter name="timeStamp" value="0" />
 <parameter name="useTestBenchNamingPattern" value="false" />
 <instanceScript></instanceScript>
 <interface
   name="color_depth_pio_external_connection"
   internal="color_depth_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface name="cpu" internal="cpu_clk.clk_in" type="clock" dir="end" />
 <interface name="cpu_clk" internal="cpu_clk.clk_in_reset" type="reset" dir="end" />
 <interface
   name="edid_ram_access_pio_external_connection"
   internal="edid_ram_access_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="edid_ram_slave_translator"
   internal="edid_ram_slave_translator.avalon_anti_slave_0"
   type="avalon"
   dir="start" />
 <interface
   name="measure_pio_external_connection"
   internal="measure_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="measure_valid_pio_external_connection"
   internal="measure_valid_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="oc_i2c_master_av_slave_translator_avalon_anti_slave_0"
   internal="oc_i2c_master_av_slave_translator.avalon_anti_slave_0"
   type="avalon"
   dir="start" />
 <interface
   name="oc_i2c_master_ti_avalon_anti_slave"
   internal="oc_i2c_master_ti.avalon_anti_slave_0"
   type="avalon"
   dir="start" />
 <interface
   name="tmds_bit_clock_ratio_pio_external_connection"
   internal="tmds_bit_clock_ratio_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_hpd_ack_pio_external_connection"
   internal="tx_hpd_ack_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_hpd_req_pio_external_connection"
   internal="tx_hpd_req_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_iopll_rcfg_mgmt_translator_avalon_anti_slave"
   internal="tx_iopll_rcfg_mgmt_translator.avalon_anti_slave_0"
   type="avalon"
   dir="start" />
 <interface
   name="tx_iopll_waitrequest_pio_external_connection"
   internal="tx_iopll_waitrequest_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_os_pio_external_connection"
   internal="tx_os_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_pll_rcfg_mgmt_translator_avalon_anti_slave"
   internal="tx_pll_rcfg_mgmt_translator.avalon_anti_slave_0"
   type="avalon"
   dir="start" />
 <interface
   name="tx_pll_waitrequest_pio_external_connection"
   internal="tx_pll_waitrequest_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_pma_cal_busy_pio_external_connection"
   internal="tx_pma_cal_busy_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_pma_ch"
   internal="tx_pma_ch.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_pma_rcfg_mgmt_translator_avalon_anti_slave"
   internal="tx_pma_rcfg_mgmt_translator.avalon_anti_slave_0"
   type="avalon"
   dir="start" />
 <interface
   name="tx_pma_waitrequest_pio_external_connection"
   internal="tx_pma_waitrequest_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_rcfg_en_pio_external_connection"
   internal="tx_rcfg_en_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_rst_pll_pio_external_connection"
   internal="tx_rst_pll_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="tx_rst_xcvr_pio_external_connection"
   internal="tx_rst_xcvr_pio.external_connection"
   type="conduit"
   dir="end" />
 <interface
   name="wd_timer_resetrequest"
   internal="wd_timer.resetrequest"
   type="reset"
   dir="start" />
 <module
   name="color_depth_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>color_depth_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_color_depth_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_color_depth_pio</fileSetName>
            <fileSetFixedName>nios_color_depth_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_color_depth_pio</fileSetName>
            <fileSetFixedName>nios_color_depth_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_color_depth_pio</fileSetName>
            <fileSetFixedName>nios_color_depth_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_color_depth_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module name="cpu" kind="altera_generic_component" version="1.0" enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>reset_req</name>
                        <role>reset_req</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>data_master</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>d_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>19</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>d_byteenable</name>
                        <role>byteenable</role>
                        <direction>Output</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>d_read</name>
                        <role>read</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>d_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>d_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>d_write</name>
                        <role>write</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>d_writedata</name>
                        <role>writedata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_debugaccess_to_roms</name>
                        <role>debugaccess</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>debug.providesServices</key>
                            <value>master</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>instruction_master</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>i_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>19</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>i_read</name>
                        <role>read</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>i_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>i_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>cpu.data_master</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>irqMap</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>INDIVIDUAL_REQUESTS</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>debug_reset_request</name>
                <type>reset</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>debug_reset_request</name>
                        <role>reset</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedDirectReset</key>
                        </entry>
                        <entry>
                            <key>associatedResetSinks</key>
                            <value>none</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>debug_mem_slave</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>debug_mem_slave_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>9</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_debugaccess</name>
                        <role>debugaccess</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_read</name>
                        <role>read</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>debug_mem_slave_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.hideDevice</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>qsys.ui.connect</key>
                            <value>instruction_master,data_master</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>2048</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>custom_instruction_master</name>
                <type>nios_custom_instruction</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>dummy_ci_port</name>
                        <role>readra</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>CIName</key>
                            <value></value>
                        </entry>
                        <entry>
                            <key>addressWidth</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>clockCycle</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>enabled</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>opcodeExtension</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>sharedCombinationalAndMulticycle</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_nios2_gen2</className>
        <version>18.1</version>
        <displayName>Nios II Processor</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>-1</parameterDefaultValue>
                <parameterName>AUTO_CLK_CLOCK_DOMAIN</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_DOMAIN</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>-1</parameterDefaultValue>
                <parameterName>AUTO_CLK_RESET_DOMAIN</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>RESET_DOMAIN</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>AUTO_DEVICE</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>DEVICE</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>AUTO_DEVICE_SPEEDGRADE</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>DEVICE_SPEEDGRADE</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>50000000</parameterDefaultValue>
                <parameterName>clockFrequency</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>customInstSlavesSystemInfo</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>custom_instruction_master</systemInfoArgs>
                <systemInfotype>CUSTOM_INSTRUCTION_SLAVES</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>customInstSlavesSystemInfo_nios_a</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>custom_instruction_master_a</systemInfoArgs>
                <systemInfotype>CUSTOM_INSTRUCTION_SLAVES</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>customInstSlavesSystemInfo_nios_b</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>custom_instruction_master_b</systemInfoArgs>
                <systemInfotype>CUSTOM_INSTRUCTION_SLAVES</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>customInstSlavesSystemInfo_nios_c</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>custom_instruction_master_c</systemInfoArgs>
                <systemInfotype>CUSTOM_INSTRUCTION_SLAVES</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>dataAddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>data_master</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>dataMasterHighPerformanceAddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>data_master_high_performance</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>dataMasterHighPerformanceMapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>data_master_high_performance</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>dataSlaveMapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>data_master</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>STRATIXIV</parameterDefaultValue>
                <parameterName>deviceFamilyName</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>DEVICE_FAMILY</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>deviceFeaturesSystemInfo</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>DEVICE_FEATURES</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>faAddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>flash_instruction_master</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>faSlaveMapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>flash_instruction_master</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>instAddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>instruction_master</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>instSlaveMapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>instruction_master</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>instructionMasterHighPerformanceAddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>instruction_master_high_performance</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>instructionMasterHighPerformanceMapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>instruction_master_high_performance</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>internalIrqMaskSystemInfo</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>irq</systemInfoArgs>
                <systemInfotype>INTERRUPTS_USED</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster0AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_0</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster0MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_0</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster1AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_1</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster1MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_1</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster2AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_2</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster2MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_2</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster3AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_3</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledDataMaster3MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_data_master_3</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster0AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_0</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster0MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_0</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster1AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_1</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster1MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_1</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster2AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_2</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster2MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_2</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster3AddrWidth</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_3</systemInfoArgs>
                <systemInfotype>ADDRESS_WIDTH</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>tightlyCoupledInstructionMaster3MapParam</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfoArgs>tightly_coupled_instruction_master_3</systemInfoArgs>
                <systemInfotype>ADDRESS_MAP</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_DOMAIN</key>
                            <value>2</value>
                        </entry>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                        <entry>
                            <key>RESET_DOMAIN</key>
                            <value>2</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>custom_instruction_master</key>
                <value>
                    <connectionPointName>custom_instruction_master</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CUSTOM_INSTRUCTION_SLAVES</key>
                            <value></value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>data_master</key>
                <value>
                    <connectionPointName>data_master</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='tx_pma_rcfg_mgmt_translator.avalon_universal_slave_0' start='0x0' end='0x4000' datawidth='32' /&gt;&lt;slave name='cpu_ram.s1' start='0x20000' end='0x3D4C0' datawidth='32' /&gt;&lt;slave name='tx_pll_rcfg_mgmt_translator.avalon_universal_slave_0' start='0x40000' end='0x41000' datawidth='32' /&gt;&lt;slave name='cpu.debug_mem_slave' start='0x41800' end='0x42000' datawidth='32' /&gt;&lt;slave name='tx_iopll_rcfg_mgmt_translator.avalon_universal_slave_0' start='0x42000' end='0x42800' datawidth='32' /&gt;&lt;slave name='wd_timer.s1' start='0x42800' end='0x42820' datawidth='16' /&gt;&lt;slave name='oc_i2c_master_av_slave_translator.avalon_universal_slave_0' start='0x42820' end='0x42840' datawidth='32' /&gt;&lt;slave name='color_depth_pio.s1' start='0x42840' end='0x42850' datawidth='32' /&gt;&lt;slave name='tx_hpd_ack_pio.s1' start='0x42850' end='0x42860' datawidth='32' /&gt;&lt;slave name='tx_hpd_req_pio.s1' start='0x42860' end='0x42870' datawidth='32' /&gt;&lt;slave name='tx_pll_waitrequest_pio.s1' start='0x42870' end='0x42880' datawidth='32' /&gt;&lt;slave name='tx_iopll_waitrequest_pio.s1' start='0x42880' end='0x42890' datawidth='32' /&gt;&lt;slave name='tmds_bit_clock_ratio_pio.s1' start='0x42890' end='0x428A0' datawidth='32' /&gt;&lt;slave name='tx_rst_xcvr_pio.s1' start='0x428A0' end='0x428B0' datawidth='32' /&gt;&lt;slave name='tx_rst_pll_pio.s1' start='0x428B0' end='0x428C0' datawidth='32' /&gt;&lt;slave name='measure_valid_pio.s1' start='0x428C0' end='0x428D0' datawidth='32' /&gt;&lt;slave name='tx_os_pio.s1' start='0x428D0' end='0x428E0' datawidth='32' /&gt;&lt;slave name='measure_pio.s1' start='0x428E0' end='0x428F0' datawidth='32' /&gt;&lt;slave name='sysid_qsys_0.control_slave' start='0x428F0' end='0x428F8' datawidth='32' /&gt;&lt;slave name='jtag_uart_0.avalon_jtag_slave' start='0x428F8' end='0x42900' datawidth='32' /&gt;&lt;slave name='tx_rcfg_en_pio.s1' start='0x42900' end='0x42910' datawidth='32' /&gt;&lt;slave name='tx_pma_waitrequest_pio.s1' start='0x42910' end='0x42920' datawidth='32' /&gt;&lt;slave name='tx_pma_cal_busy_pio.s1' start='0x42920' end='0x42930' datawidth='32' /&gt;&lt;slave name='tx_pma_ch.s1' start='0x42930' end='0x42940' datawidth='32' /&gt;&lt;slave name='edid_ram_slave_translator.avalon_universal_slave_0' start='0x42C00' end='0x43000' datawidth='8' /&gt;&lt;slave name='edid_ram_access_pio.s1' start='0x43000' end='0x43010' datawidth='32' /&gt;&lt;slave name='oc_i2c_master_ti.avalon_universal_slave_0' start='0x43120' end='0x43140' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>19</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>debug_mem_slave</key>
                <value>
                    <connectionPointName>debug_mem_slave</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='debug_mem_slave' start='0x0' end='0x800' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>11</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>instruction_master</key>
                <value>
                    <connectionPointName>instruction_master</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='cpu_ram.s1' start='0x20000' end='0x3D4C0' datawidth='32' /&gt;&lt;slave name='cpu.debug_mem_slave' start='0x41800' end='0x42000' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>19</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>irq</key>
                <value>
                    <connectionPointName>irq</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>INTERRUPTS_USED</key>
                            <value>6015</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_cpu</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_cpu</fileSetName>
            <fileSetFixedName>nios_cpu</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_cpu</fileSetName>
            <fileSetFixedName>nios_cpu</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_cpu</fileSetName>
            <fileSetFixedName>nios_cpu</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView" value="ip/nios/nios_cpu.ip" />
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>debug.hostConnection</key>
            <value>type jtag id 70:34|110:135</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIG_ENDIAN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BREAK_ADDR</key>
            <value>0x00041820</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CPU_ARCH_NIOS2_R1</key>
            <value></value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CPU_FREQ</key>
            <value>100000000u</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CPU_ID_SIZE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CPU_ID_VALUE</key>
            <value>0x00000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CPU_IMPLEMENTATION</key>
            <value>"tiny"</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_ADDR_WIDTH</key>
            <value>19</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DCACHE_BYPASS_MASK</key>
            <value>0x80000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DCACHE_LINE_SIZE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DCACHE_LINE_SIZE_LOG2</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DCACHE_SIZE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EXCEPTION_ADDR</key>
            <value>0x00020020</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FLASH_ACCELERATOR_LINES</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FLASH_ACCELERATOR_LINE_SIZE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FLUSHDA_SUPPORTED</key>
            <value></value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HARDWARE_DIVIDE_PRESENT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HARDWARE_MULTIPLY_PRESENT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HARDWARE_MULX_PRESENT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_DEBUG_CORE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_DEBUG_STUB</key>
            <value></value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_EXTRA_EXCEPTION_INFO</key>
            <value></value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_ILLEGAL_INSTRUCTION_EXCEPTION</key>
            <value></value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_JMPI_INSTRUCTION</key>
            <value></value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.ICACHE_LINE_SIZE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.ICACHE_LINE_SIZE_LOG2</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.ICACHE_SIZE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.INITDA_SUPPORTED</key>
            <value></value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.INST_ADDR_WIDTH</key>
            <value>19</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.NUM_OF_SHADOW_REG_SETS</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.OCI_VERSION</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_ADDR</key>
            <value>0x00020000</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.DataCacheVictimBufImpl</key>
            <value>ram</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.HDLSimCachesCleared</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.breakOffset</key>
            <value>32</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.breakSlave</key>
            <value>cpu.debug_mem_slave</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.cpuArchitecture</key>
            <value>Nios II</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.exceptionOffset</key>
            <value>32</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.exceptionSlave</key>
            <value>cpu_ram.s1</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.resetOffset</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.configuration.resetSlave</key>
            <value>cpu_ram.s1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,nios2-1.1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>cpu</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>nios2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,exception-addr</key>
            <value>0x00020020</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,has-initda</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,has-mul</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,has-mulx</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,implementation</key>
            <value>"tiny"</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,reset-addr</key>
            <value>0x00020000</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.clock-frequency</key>
            <value>100000000u</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.dcache-line-size</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.dcache-size</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.icache-line-size</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.icache-size</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="cpu_clk"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk_in</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>qsys.ui.export_name</key>
                            <value>clk</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>100000000</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>clk_in_reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>qsys.ui.export_name</key>
                            <value>reset</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>clk_out</name>
                        <role>clk</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedDirectClock</key>
                            <value>clk_in</value>
                        </entry>
                        <entry>
                            <key>clockRate</key>
                            <value>100000000</value>
                        </entry>
                        <entry>
                            <key>clockRateKnown</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>clk_reset</name>
                <type>reset</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>reset_n_out</name>
                        <role>reset_n</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedDirectReset</key>
                            <value>clk_in_reset</value>
                        </entry>
                        <entry>
                            <key>associatedResetSinks</key>
                            <value>clk_in_reset</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>clock_source</className>
        <displayName>Clock Source</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>inputClockFrequency</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk_in</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk_in</key>
                <value>
                    <connectionPointName>clk_in</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>0</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_cpu_clk</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_cpu_clk</fileSetName>
            <fileSetFixedName>nios_cpu_clk</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_cpu_clk</fileSetName>
            <fileSetFixedName>nios_cpu_clk</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_cpu_clk</fileSetName>
            <fileSetFixedName>nios_cpu_clk</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_cpu_clk.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap/>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="cpu_ram"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk1</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>15</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>clken</name>
                        <role>clken</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>120000</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk1</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset1</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>120000</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset1</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset</name>
                        <role>reset</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>reset_req</name>
                        <role>reset_req</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk1</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_onchip_memory2</className>
        <version>18.1</version>
        <displayName>On-Chip Memory (RAM or ROM) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>autoInitializationFileName</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>UNIQUE_ID</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>NONE</parameterDefaultValue>
                <parameterName>deviceFamily</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>DEVICE_FAMILY</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>NONE</parameterDefaultValue>
                <parameterName>deviceFeatures</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>DEVICE_FEATURES</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x1D4C0' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>17</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_cpu_ram</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_cpu_ram</fileSetName>
            <fileSetFixedName>nios_cpu_ram</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_cpu_ram</fileSetName>
            <fileSetFixedName>nios_cpu_ram</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_cpu_ram</fileSetName>
            <fileSetFixedName>nios_cpu_ram</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_cpu_ram.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CONTENTS_INFO</key>
            <value>""</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DUAL_PORT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.GUI_RAM_BLOCK_TYPE</key>
            <value>AUTO</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.INIT_CONTENTS_FILE</key>
            <value>nios_cpu_ram_cpu_ram</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.INIT_MEM_CONTENT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.INSTANCE_ID</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.NON_DEFAULT_INIT_FILE_ENABLED</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RAM_BLOCK_TYPE</key>
            <value>AUTO</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.READ_DURING_WRITE_MODE</key>
            <value>DONT_CARE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.SINGLE_CLOCK_OP</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.SIZE_MULTIPLE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.SIZE_VALUE</key>
            <value>120000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.WRITABLE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.memoryInfo.DAT_SYM_INSTALL_DIR</key>
            <value>SIM_DIR</value>
        </entry>
        <entry>
            <key>embeddedsw.memoryInfo.GENERATE_DAT_SYM</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.memoryInfo.GENERATE_HEX</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.memoryInfo.HAS_BYTE_LANE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.memoryInfo.HEX_INSTALL_DIR</key>
            <value>QPF_DIR</value>
        </entry>
        <entry>
            <key>embeddedsw.memoryInfo.MEM_INIT_DATA_WIDTH</key>
            <value>32</value>
        </entry>
        <entry>
            <key>embeddedsw.memoryInfo.MEM_INIT_FILENAME</key>
            <value>nios_cpu_ram_cpu_ram</value>
        </entry>
        <entry>
            <key>postgeneration.simulation.init_file.param_name</key>
            <value>INIT_FILE</value>
        </entry>
        <entry>
            <key>postgeneration.simulation.init_file.type</key>
            <value>MEM_INIT</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="edid_ram_access_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>out_port</name>
                        <role>export</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_edid_ram_access_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_edid_ram_access_pio</fileSetName>
            <fileSetFixedName>nios_edid_ram_access_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_edid_ram_access_pio</fileSetName>
            <fileSetFixedName>nios_edid_ram_access_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_edid_ram_access_pio</fileSetName>
            <fileSetFixedName>nios_edid_ram_access_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_edid_ram_access_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="edid_ram_slave_translator"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset</name>
                        <role>reset</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_universal_slave_0</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>uav_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>11</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_burstcount</name>
                        <role>burstcount</role>
                        <direction>Input</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_read</name>
                        <role>read</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdatavalid</name>
                        <role>readdatavalid</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>8</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>8</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_lock</name>
                        <role>lock</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_debugaccess</name>
                        <role>debugaccess</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>merlin.flow.avalon_anti_slave_0</key>
                            <value>avalon_anti_slave_0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>1024</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>1024</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>64</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_anti_slave_0</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>av_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>8</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_write</name>
                        <role>write</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_read</name>
                        <role>read</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>8</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_writedata</name>
                        <role>writedata</role>
                        <direction>Output</direction>
                        <width>8</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>1</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_merlin_slave_translator</className>
        <version>18.1</version>
        <displayName>Avalon-MM Slave Translator Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>CLOCK_RATE</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>avalon_universal_slave_0</key>
                <value>
                    <connectionPointName>avalon_universal_slave_0</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='avalon_universal_slave_0' start='0x0' end='0x400' datawidth='8' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>10</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>8</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_edid_ram_slave_translator</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_edid_ram_slave_translator</fileSetName>
            <fileSetFixedName>nios_edid_ram_slave_translator</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_edid_ram_slave_translator</fileSetName>
            <fileSetFixedName>nios_edid_ram_slave_translator</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_edid_ram_slave_translator</fileSetName>
            <fileSetFixedName>nios_edid_ram_slave_translator</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_edid_ram_slave_translator.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap/>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="jtag_uart_0"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>rst_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_jtag_slave</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>av_chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_read_n</name>
                        <role>read_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>1</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>2</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>true</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_jtag_uart&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;8&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Embedded software accesses the read and write FIFOs via the data register. A read from the data register returns the first character from the FIFO (if one is available) in the DATA field. Reading also returns information about the number of characters remaining in the FIFO in the RAVAIL field. A write to the data register stores the value of the DATA field in the write FIFO. If the write FIFO is full, the character is lost.&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;The value to transfer to/from the JTAG core. When writing, the DATA field holds a character to be written to the write FIFO. When reading, the DATA field holds a character read from the read FIFO.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;8&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
           &lt;field&gt;&lt;name&gt;rvalid&lt;/name&gt;
           &lt;description&gt;Indicates whether the DATA field is valid. If RVALID=1, the DATA field is valid, otherwise DATA is undefined.&lt;/description&gt;
            &lt;bitOffset&gt;0xf&lt;/bitOffset&gt;
            &lt;bitWidth&gt;1&lt;/bitWidth&gt;
            &lt;access&gt;read-only&lt;/access&gt;
        &lt;/field&gt;
           &lt;field&gt;&lt;name&gt;ravail&lt;/name&gt;
           &lt;description&gt;The number of characters remaining in the read FIFO (after the current read).&lt;/description&gt;
            &lt;bitOffset&gt;0x10&lt;/bitOffset&gt;
            &lt;bitWidth&gt;16&lt;/bitWidth&gt;
            &lt;access&gt;read-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CONTROL&lt;/name&gt;  
         &lt;displayName&gt;Control&lt;/displayName&gt;
         &lt;description&gt;Embedded software controls the JTAG UART core's interrupt generation and reads status information via the control register. A read from the control register returns the status of the read and write FIFOs. Writes to the register can be used to enable/disable interrupts, or clear the AC bit.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;re&lt;/name&gt;
            &lt;description&gt;Interrupt-enable bit for read interrupts.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;1&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
           &lt;field&gt;&lt;name&gt;we&lt;/name&gt;
            &lt;description&gt;Interrupt-enable bit for write interrupts&lt;/description&gt;
            &lt;bitOffset&gt;0x1&lt;/bitOffset&gt;
            &lt;bitWidth&gt;1&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
           &lt;field&gt;&lt;name&gt;ri&lt;/name&gt;
            &lt;description&gt;Indicates that the read interrupt is pending.&lt;/description&gt;
            &lt;bitOffset&gt;0x8&lt;/bitOffset&gt;
            &lt;bitWidth&gt;1&lt;/bitWidth&gt;
            &lt;access&gt;read-only&lt;/access&gt;
        &lt;/field&gt;
           &lt;field&gt;&lt;name&gt;wi&lt;/name&gt;
            &lt;description&gt;Indicates that the write interrupt is pending.&lt;/description&gt;
            &lt;bitOffset&gt;0x9&lt;/bitOffset&gt;
            &lt;bitWidth&gt;1&lt;/bitWidth&gt;
            &lt;access&gt;read-only&lt;/access&gt;
        &lt;/field&gt;
           &lt;field&gt;&lt;name&gt;ac&lt;/name&gt;
            &lt;description&gt;Indicates that there has been JTAG activity since the bit was cleared. Writing 1 to AC clears it to 0.&lt;/description&gt;
            &lt;bitOffset&gt;0xa&lt;/bitOffset&gt;
            &lt;bitWidth&gt;1&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
           &lt;field&gt;&lt;name&gt;wspace&lt;/name&gt;
            &lt;description&gt;The number of spaces available in the write FIFO&lt;/description&gt;
            &lt;bitOffset&gt;0x10&lt;/bitOffset&gt;
            &lt;bitWidth&gt;16&lt;/bitWidth&gt;
            &lt;access&gt;read-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>av_irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>jtag_uart_0.avalon_jtag_slave</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_jtag_uart</className>
        <version>18.1</version>
        <displayName>JTAG UART Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue></parameterDefaultValue>
                <parameterName>avalonSpec</parameterName>
                <parameterType>java.lang.String</parameterType>
                <systemInfotype>AVALON_SPEC</systemInfotype>
            </descriptor>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clkFreq</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>avalon_jtag_slave</key>
                <value>
                    <connectionPointName>avalon_jtag_slave</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='avalon_jtag_slave' start='0x0' end='0x8' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>3</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_jtag_uart_0</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_jtag_uart_0</fileSetName>
            <fileSetFixedName>nios_jtag_uart_0</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_jtag_uart_0</fileSetName>
            <fileSetFixedName>nios_jtag_uart_0</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_jtag_uart_0</fileSetName>
            <fileSetFixedName>nios_jtag_uart_0</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_jtag_uart_0.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.READ_DEPTH</key>
            <value>1024</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.READ_THRESHOLD</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.WRITE_DEPTH</key>
            <value>1024</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.WRITE_THRESHOLD</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,juart-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>serial</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>juart</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="measure_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>24</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>measure_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_measure_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_measure_pio</fileSetName>
            <fileSetFixedName>nios_measure_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_measure_pio</fileSetName>
            <fileSetFixedName>nios_measure_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_measure_pio</fileSetName>
            <fileSetFixedName>nios_measure_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_measure_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>24</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>24</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="measure_valid_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>measure_valid_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_measure_valid_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_measure_valid_pio</fileSetName>
            <fileSetFixedName>nios_measure_valid_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_measure_valid_pio</fileSetName>
            <fileSetFixedName>nios_measure_valid_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_measure_valid_pio</fileSetName>
            <fileSetFixedName>nios_measure_valid_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_measure_valid_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="oc_i2c_master_av_slave_translator"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset</name>
                        <role>reset</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_universal_slave_0</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>uav_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>5</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_burstcount</name>
                        <role>burstcount</role>
                        <direction>Input</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_read</name>
                        <role>read</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdatavalid</name>
                        <role>readdatavalid</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_lock</name>
                        <role>lock</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_debugaccess</name>
                        <role>debugaccess</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>merlin.flow.avalon_anti_slave_0</key>
                            <value>avalon_anti_slave_0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>64</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_anti_slave_0</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>av_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_write</name>
                        <role>write</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_writedata</name>
                        <role>writedata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_chipselect</name>
                        <role>chipselect</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_merlin_slave_translator</className>
        <version>18.1</version>
        <displayName>Avalon-MM Slave Translator Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>CLOCK_RATE</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>avalon_universal_slave_0</key>
                <value>
                    <connectionPointName>avalon_universal_slave_0</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='avalon_universal_slave_0' start='0x0' end='0x20' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>5</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_oc_i2c_master_av_slave_translator</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_oc_i2c_master_av_slave_translator</fileSetName>
            <fileSetFixedName>nios_oc_i2c_master_av_slave_translator</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_oc_i2c_master_av_slave_translator</fileSetName>
            <fileSetFixedName>nios_oc_i2c_master_av_slave_translator</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_oc_i2c_master_av_slave_translator</fileSetName>
            <fileSetFixedName>nios_oc_i2c_master_av_slave_translator</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_oc_i2c_master_av_slave_translator.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap/>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="oc_i2c_master_ti"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset</name>
                        <role>reset</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_universal_slave_0</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>uav_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>5</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_burstcount</name>
                        <role>burstcount</role>
                        <direction>Input</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_read</name>
                        <role>read</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdatavalid</name>
                        <role>readdatavalid</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_lock</name>
                        <role>lock</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_debugaccess</name>
                        <role>debugaccess</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>merlin.flow.avalon_anti_slave_0</key>
                            <value>avalon_anti_slave_0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>64</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_anti_slave_0</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>av_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_write</name>
                        <role>write</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_writedata</name>
                        <role>writedata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_chipselect</name>
                        <role>chipselect</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_merlin_slave_translator</className>
        <version>18.1</version>
        <displayName>Avalon-MM Slave Translator Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>CLOCK_RATE</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>avalon_universal_slave_0</key>
                <value>
                    <connectionPointName>avalon_universal_slave_0</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='avalon_universal_slave_0' start='0x0' end='0x20' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>5</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_oc_i2c_master_ti</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_oc_i2c_master_ti</fileSetName>
            <fileSetFixedName>nios_oc_i2c_master_ti</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_oc_i2c_master_ti</fileSetName>
            <fileSetFixedName>nios_oc_i2c_master_ti</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_oc_i2c_master_ti</fileSetName>
            <fileSetFixedName>nios_oc_i2c_master_ti</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_oc_i2c_master_ti.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap/>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="sysid_qsys_0"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clock</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>control_slave</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
    &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_sysid&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;8&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;ID&lt;/name&gt;  
         &lt;displayName&gt;System ID&lt;/displayName&gt;
            &lt;description&gt;A unique 32-bit value that is based on the contents of the QSys system. The id is similar to a check-sum value; QSys systems with different components, different configuration options, or both, produce different id values.&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-only&lt;/access&gt;
         &lt;resetValue&gt;${sysid_id_value}&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;id&lt;/name&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;TIMESTAMP&lt;/name&gt;  
         &lt;displayName&gt;Time stamp&lt;/displayName&gt;
         &lt;description&gt;A unique 32-bit value that is based on the system generation time. The value is equivalent to the number of seconds after Jan. 1, 1970.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-only&lt;/access&gt;
         &lt;resetValue&gt;${sysid_timestamp_value}&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;timestamp&lt;/name&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars>
                        <entry>
                            <key>sysid_timestamp_value</key>
                            <value>0x0</value>
                        </entry>
                        <entry>
                            <key>sysid_id_value</key>
                            <value>0x0</value>
                        </entry>
                    </cmsisVars>
                </cmsisInfo>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_sysid_qsys</className>
        <version>18.1</version>
        <displayName>System ID Peripheral Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>TIMESTAMP</parameterName>
                <parameterType>java.lang.Integer</parameterType>
                <systemInfotype>GENERATION_ID</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>control_slave</key>
                <value>
                    <connectionPointName>control_slave</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='control_slave' start='0x0' end='0x8' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>3</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_sysid_qsys_0</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_sysid_qsys_0</fileSetName>
            <fileSetFixedName>nios_sysid_qsys_0</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_sysid_qsys_0</fileSetName>
            <fileSetFixedName>nios_sysid_qsys_0</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_sysid_qsys_0</fileSetName>
            <fileSetFixedName>nios_sysid_qsys_0</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_sysid_qsys_0.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.ID</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.TIMESTAMP</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,sysid-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>sysid</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>sysid</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.id</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.timestamp</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tmds_bit_clock_ratio_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>tmds_bit_clock_ratio_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tmds_bit_clock_ratio_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tmds_bit_clock_ratio_pio</fileSetName>
            <fileSetFixedName>nios_tmds_bit_clock_ratio_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tmds_bit_clock_ratio_pio</fileSetName>
            <fileSetFixedName>nios_tmds_bit_clock_ratio_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tmds_bit_clock_ratio_pio</fileSetName>
            <fileSetFixedName>nios_tmds_bit_clock_ratio_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tmds_bit_clock_ratio_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_hpd_ack_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>out_port</name>
                        <role>export</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_hpd_ack_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_hpd_ack_pio</fileSetName>
            <fileSetFixedName>nios_tx_hpd_ack_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_hpd_ack_pio</fileSetName>
            <fileSetFixedName>nios_tx_hpd_ack_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_hpd_ack_pio</fileSetName>
            <fileSetFixedName>nios_tx_hpd_ack_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_hpd_ack_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_hpd_req_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>tx_hpd_req_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_hpd_req_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_hpd_req_pio</fileSetName>
            <fileSetFixedName>nios_tx_hpd_req_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_hpd_req_pio</fileSetName>
            <fileSetFixedName>nios_tx_hpd_req_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_hpd_req_pio</fileSetName>
            <fileSetFixedName>nios_tx_hpd_req_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_hpd_req_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_iopll_rcfg_mgmt_translator"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset</name>
                        <role>reset</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_universal_slave_0</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>uav_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>12</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_burstcount</name>
                        <role>burstcount</role>
                        <direction>Input</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_read</name>
                        <role>read</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdatavalid</name>
                        <role>readdatavalid</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_lock</name>
                        <role>lock</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_debugaccess</name>
                        <role>debugaccess</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>merlin.flow.avalon_anti_slave_0</key>
                            <value>avalon_anti_slave_0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>2048</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>2048</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>64</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_anti_slave_0</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>av_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>9</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_write</name>
                        <role>write</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_read</name>
                        <role>read</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_writedata</name>
                        <role>writedata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_merlin_slave_translator</className>
        <version>18.1</version>
        <displayName>Avalon-MM Slave Translator Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>CLOCK_RATE</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>avalon_universal_slave_0</key>
                <value>
                    <connectionPointName>avalon_universal_slave_0</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='avalon_universal_slave_0' start='0x0' end='0x800' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>11</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_iopll_rcfg_mgmt_translator</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_iopll_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_iopll_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_iopll_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_iopll_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_iopll_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_iopll_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_iopll_rcfg_mgmt_translator.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap/>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_iopll_waitrequest_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>tx_iopll_waitrequest_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_iopll_waitrequest_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_iopll_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_iopll_waitrequest_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_iopll_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_iopll_waitrequest_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_iopll_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_iopll_waitrequest_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_iopll_waitrequest_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_os_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>out_port</name>
                        <role>export</role>
                        <direction>Output</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_os_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_os_pio</fileSetName>
            <fileSetFixedName>nios_tx_os_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_os_pio</fileSetName>
            <fileSetFixedName>nios_tx_os_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_os_pio</fileSetName>
            <fileSetFixedName>nios_tx_os_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_os_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_pll_rcfg_mgmt_translator"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset</name>
                        <role>reset</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_universal_slave_0</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>uav_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>12</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_burstcount</name>
                        <role>burstcount</role>
                        <direction>Input</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_read</name>
                        <role>read</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdatavalid</name>
                        <role>readdatavalid</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_lock</name>
                        <role>lock</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_debugaccess</name>
                        <role>debugaccess</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>merlin.flow.avalon_anti_slave_0</key>
                            <value>avalon_anti_slave_0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4096</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>4096</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>64</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_anti_slave_0</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>av_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>10</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_write</name>
                        <role>write</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_read</name>
                        <role>read</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_writedata</name>
                        <role>writedata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_merlin_slave_translator</className>
        <version>18.1</version>
        <displayName>Avalon-MM Slave Translator Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>CLOCK_RATE</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>avalon_universal_slave_0</key>
                <value>
                    <connectionPointName>avalon_universal_slave_0</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='avalon_universal_slave_0' start='0x0' end='0x1000' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>12</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_pll_rcfg_mgmt_translator</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_pll_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_pll_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pll_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_pll_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pll_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_pll_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_pll_rcfg_mgmt_translator.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap/>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_pll_waitrequest_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>tx_pll_waitrequest_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_pll_waitrequest_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_pll_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_pll_waitrequest_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pll_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_pll_waitrequest_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pll_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_pll_waitrequest_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_pll_waitrequest_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_pma_cal_busy_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>tx_pma_cal_busy_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_pma_cal_busy_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_pma_cal_busy_pio</fileSetName>
            <fileSetFixedName>nios_tx_pma_cal_busy_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_cal_busy_pio</fileSetName>
            <fileSetFixedName>nios_tx_pma_cal_busy_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_cal_busy_pio</fileSetName>
            <fileSetFixedName>nios_tx_pma_cal_busy_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_pma_cal_busy_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_pma_ch"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>out_port</name>
                        <role>export</role>
                        <direction>Output</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_pma_ch</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_pma_ch</fileSetName>
            <fileSetFixedName>nios_tx_pma_ch</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_ch</fileSetName>
            <fileSetFixedName>nios_tx_pma_ch</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_ch</fileSetName>
            <fileSetFixedName>nios_tx_pma_ch</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_pma_ch.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_pma_rcfg_mgmt_translator"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset</name>
                        <role>reset</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_universal_slave_0</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>uav_address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>14</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_burstcount</name>
                        <role>burstcount</role>
                        <direction>Input</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_read</name>
                        <role>read</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_write</name>
                        <role>write</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdatavalid</name>
                        <role>readdatavalid</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_byteenable</name>
                        <role>byteenable</role>
                        <direction>Input</direction>
                        <width>4</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>uav_lock</name>
                        <role>lock</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>uav_debugaccess</name>
                        <role>debugaccess</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>merlin.flow.avalon_anti_slave_0</key>
                            <value>avalon_anti_slave_0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>DYNAMIC</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>16384</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>SYMBOLS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>16384</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>64</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>avalon_anti_slave_0</name>
                <type>avalon</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>av_address</name>
                        <role>address</role>
                        <direction>Output</direction>
                        <width>12</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_write</name>
                        <role>write</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_read</name>
                        <role>read</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>av_readdata</name>
                        <role>readdata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_writedata</name>
                        <role>writedata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>av_waitrequest</name>
                        <role>waitrequest</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>adaptsTo</key>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>dBSBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamReads</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>doStreamWrites</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isAsynchronous</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isReadable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isWriteable</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maxAddressWidth</key>
                            <value>32</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_merlin_slave_translator</className>
        <version>18.1</version>
        <displayName>Avalon-MM Slave Translator Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>1</parameterDefaultValue>
                <parameterName>CLOCK_RATE</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>avalon_universal_slave_0</key>
                <value>
                    <connectionPointName>avalon_universal_slave_0</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='avalon_universal_slave_0' start='0x0' end='0x4000' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>14</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_pma_rcfg_mgmt_translator</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_pma_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_pma_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_pma_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_rcfg_mgmt_translator</fileSetName>
            <fileSetFixedName>nios_tx_pma_rcfg_mgmt_translator</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_pma_rcfg_mgmt_translator.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap/>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_pma_waitrequest_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>in_port</name>
                        <role>export</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.dts.irq.tx_type</key>
                            <value>RISING_EDGE</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>tx_pma_waitrequest_pio.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_pma_waitrequest_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_pma_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_pma_waitrequest_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_pma_waitrequest_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_pma_waitrequest_pio</fileSetName>
            <fileSetFixedName>nios_tx_pma_waitrequest_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_pma_waitrequest_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>ANY</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>EDGE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt-type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,interrupt_type</key>
            <value>3</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.edge_type</key>
            <value>2</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.level_trigger</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_rcfg_en_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>out_port</name>
                        <role>export</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_rcfg_en_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_rcfg_en_pio</fileSetName>
            <fileSetFixedName>nios_tx_rcfg_en_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_rcfg_en_pio</fileSetName>
            <fileSetFixedName>nios_tx_rcfg_en_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_rcfg_en_pio</fileSetName>
            <fileSetFixedName>nios_tx_rcfg_en_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_rcfg_en_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_rst_pll_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>out_port</name>
                        <role>export</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_rst_pll_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_rst_pll_pio</fileSetName>
            <fileSetFixedName>nios_tx_rst_pll_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_rst_pll_pio</fileSetName>
            <fileSetFixedName>nios_tx_rst_pll_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_rst_pll_pio</fileSetName>
            <fileSetFixedName>nios_tx_rst_pll_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_rst_pll_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="tx_rst_xcvr_pio"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>2</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>32</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_pio&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;32&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
      &lt;registers&gt;
        &lt;register&gt;     
         &lt;name&gt;DATA&lt;/name&gt;  
         &lt;displayName&gt;Data&lt;/displayName&gt;
         &lt;description&gt;Reading from data returns the value present at the input ports. If the PIO core hardware is configured in output-only mode, reading from data returns an undefined value. Writing to data stores the value to a register that drives the output ports. If the PIO core hardware is configured in input-only mode, writing to data has no effect. If the PIO core hardware is in bidirectional mode, the registered value appears on an output port only when the corresponding bit in the direction register is set to 1 (output).&lt;/description&gt;
         &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;data&lt;/name&gt;
           &lt;description&gt;Reads: Data value currently on PIO inputs. Writes: New value to drive on PIO outputs.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;DIRECTION&lt;/name&gt;  
         &lt;displayName&gt;Direction&lt;/displayName&gt;
         &lt;description&gt;The direction register controls the data direction for each PIO port, assuming the port is bidirectional. When bit n in direction is set to 1, port n drives out the value in the corresponding bit of the data register The direction register only exists when the PIO core hardware is configured in bidirectional mode. The mode (input, output, or bidirectional) is specified at system generation time, and cannot be changed at runtime. In input-only or output-only mode, the direction register does not exist. In this case, reading direction returns an undefined value, writing direction has no effect. After reset, all bits of direction are 0, so that all bidirectional I/O ports are configured as inputs. If those PIO ports are connected to device pins, the pins are held in a high-impedance state. In bi-directional mode, to change the direction of the PIO port, reprogram the direction register.&lt;/description&gt;
         &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;direction&lt;/name&gt;
            &lt;description&gt;Individual direction control for each I/O port. A value of 0 sets the direction to input; 1 sets the direction to output.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;IRQ_MASK&lt;/name&gt;  
         &lt;displayName&gt;Interrupt mask&lt;/displayName&gt;
         &lt;description&gt;Setting a bit in the interruptmask register to 1 enables interrupts for the corresponding PIO input port. Interrupt behavior depends on the hardware configuration of the PIO core. The interruptmask register only exists when the hardware is configured to generate IRQs. If the core cannot generate IRQs, reading interruptmask returns an undefined value, and writing to interruptmask has no effect. After reset, all bits of interruptmask are zero, so that interrupts are disabled for all PIO ports.&lt;/description&gt;
         &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;interruptmask&lt;/name&gt;
            &lt;description&gt;IRQ enable/disable for each input port. Setting a bit to 1 enables interrupts for the corresponding port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;EDGE_CAP&lt;/name&gt;  
         &lt;displayName&gt;Edge capture&lt;/displayName&gt;
         &lt;description&gt;Bit n in the edgecapture register is set to 1 whenever an edge is detected on input port n. An Avalon-MM master peripheral can read the edgecapture register to determine if an edge has occurred on any of the PIO input ports. If the option Enable bit-clearing for edge capture register is turned off, writing any value to the edgecapture register clears all bits in the register. Otherwise, writing a 1 to a particular bit in the register clears only that bit. The type of edge(s) to detect is fixed in hardware at system generation time. The edgecapture register only exists when the hardware is configured to capture edges. If the core is not configured to capture edges, reading from edgecapture returns an undefined value, and writing to edgecapture has no effect.&lt;/description&gt;
         &lt;addressOffset&gt;0xc&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;read-write&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;edgecapture&lt;/name&gt;
            &lt;description&gt;Edge detection for each input port.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;read-write&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;
         &lt;name&gt;SET_BIT&lt;/name&gt;  
         &lt;displayName&gt;Outset&lt;/displayName&gt;
         &lt;description&gt;You can use the outset register to set individual bits of the output port. For example, to set bit 6 of the output port, write 0x40 to the outset register. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x10&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outset&lt;/name&gt;
            &lt;description&gt;Specifies which bit of the output port to set.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt; 
        &lt;register&gt;     
         &lt;name&gt;CLEAR_BITS&lt;/name&gt;  
         &lt;displayName&gt;Outclear&lt;/displayName&gt;
         &lt;description&gt;You can use the outclear register to clear individual bits of the output port. For example, writing 0x08 to the outclear register clears bit 3 of the output port. This register is only present when the option Enable individual bit set/clear output register is turned on.&lt;/description&gt;
         &lt;addressOffset&gt;0x14&lt;/addressOffset&gt;
         &lt;size&gt;32&lt;/size&gt;
         &lt;access&gt;write-only&lt;/access&gt;
         &lt;resetValue&gt;0x0&lt;/resetValue&gt;
         &lt;resetMask&gt;0xffffffff&lt;/resetMask&gt; 
         &lt;fields&gt;
           &lt;field&gt;&lt;name&gt;outclear&lt;/name&gt;
            &lt;description&gt;Specifies which output bit to clear.&lt;/description&gt;
            &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
            &lt;bitWidth&gt;32&lt;/bitWidth&gt;
            &lt;access&gt;write-only&lt;/access&gt;
        &lt;/field&gt;
       &lt;/fields&gt;
     &lt;/register&gt;            
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars/>
                </cmsisInfo>
            </interface>
            <interface>
                <name>external_connection</name>
                <type>conduit</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>out_port</name>
                        <role>export</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_pio</className>
        <version>18.1</version>
        <displayName>PIO (Parallel I/O) Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>clockRate</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x10' datawidth='32' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>4</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>32</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_tx_rst_xcvr_pio</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_tx_rst_xcvr_pio</fileSetName>
            <fileSetFixedName>nios_tx_rst_xcvr_pio</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_rst_xcvr_pio</fileSetName>
            <fileSetFixedName>nios_tx_rst_xcvr_pio</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_tx_rst_xcvr_pio</fileSetName>
            <fileSetFixedName>nios_tx_rst_xcvr_pio</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_tx_rst_xcvr_pio.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.BIT_CLEARING_EDGE_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.BIT_MODIFYING_OUTPUT_REGISTER</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.CAPTURE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DATA_WIDTH</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DO_TEST_BENCH_WIRING</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.DRIVEN_SIM_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.EDGE_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_IN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_OUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.HAS_TRI</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.IRQ_TYPE</key>
            <value>NONE</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_VALUE</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,pio-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>gpio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>pio</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.altr,gpio-bank-width</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.resetvalue</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <module
   name="wd_timer"
   kind="altera_generic_component"
   version="1.0"
   enabled="1">
  <parameter name="componentDefinition"><![CDATA[<componentDefinition>
    <boundary>
        <interfaces>
            <interface>
                <name>clk</name>
                <type>clock</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>clk</name>
                        <role>clk</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>clockRate</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>externallyDriven</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>ptfSchematicName</key>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>reset</name>
                <type>reset</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>reset_n</name>
                        <role>reset_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>DEASSERT</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>s1</name>
                <type>avalon</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>address</name>
                        <role>address</role>
                        <direction>Input</direction>
                        <width>3</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>writedata</name>
                        <role>writedata</role>
                        <direction>Input</direction>
                        <width>16</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>readdata</name>
                        <role>readdata</role>
                        <direction>Output</direction>
                        <width>16</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                    </port>
                    <port>
                        <name>chipselect</name>
                        <role>chipselect</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                    <port>
                        <name>write_n</name>
                        <role>write_n</role>
                        <direction>Input</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap>
                        <entry>
                            <key>embeddedsw.configuration.isFlash</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isMemoryDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isNonVolatileStorage</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isPrintableDevice</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>embeddedsw.configuration.isTimerDevice</key>
                            <value>1</value>
                        </entry>
                    </assignmentValueMap>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>addressAlignment</key>
                            <value>NATIVE</value>
                        </entry>
                        <entry>
                            <key>addressGroup</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>addressSpan</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>addressUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>alwaysBurstMaxBurst</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bitsPerSymbol</key>
                            <value>8</value>
                        </entry>
                        <entry>
                            <key>bridgedAddressOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToMaster</key>
                        </entry>
                        <entry>
                            <key>burstOnBurstBoundariesOnly</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>burstcountUnits</key>
                            <value>WORDS</value>
                        </entry>
                        <entry>
                            <key>constantBurstBehavior</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>explicitAddressSpan</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>holdTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>interleaveBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isBigEndian</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isFlash</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isMemoryDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>isNonVolatileStorage</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>linewrapBursts</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>maximumPendingReadTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>maximumPendingWriteTransactions</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>minimumReadLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumResponseLatency</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>minimumUninterruptedRunLength</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>prSafe</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>printableDevice</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>readLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>readWaitStates</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>readWaitTime</key>
                            <value>1</value>
                        </entry>
                        <entry>
                            <key>registerIncomingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>registerOutgoingSignals</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>setupTime</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>timingUnits</key>
                            <value>Cycles</value>
                        </entry>
                        <entry>
                            <key>transparentBridge</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>waitrequestAllowance</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>wellBehavedWaitrequest</key>
                            <value>false</value>
                        </entry>
                        <entry>
                            <key>writeLatency</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitStates</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>writeWaitTime</key>
                            <value>0</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
                <cmsisInfo>
                    <cmsisSrcFileContents>&lt;?xml version="1.0" encoding="utf-8"?&gt;    
&lt;device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" &gt;
  &lt;peripherals&gt;
   &lt;peripheral&gt;
      &lt;name&gt;altera_avalon_timer&lt;/name&gt;&lt;baseAddress&gt;0x00000000&lt;/baseAddress&gt; 
      &lt;addressBlock&gt;
        &lt;offset&gt;0x0&lt;/offset&gt;
        &lt;size&gt;16&lt;/size&gt;
        &lt;usage&gt;registers&lt;/usage&gt;
      &lt;/addressBlock&gt;
       &lt;registers&gt;
         &lt;register&gt;     
          &lt;name&gt;status&lt;/name&gt;  
          &lt;displayName&gt;Status&lt;/displayName&gt;
          &lt;description&gt;The status register has two defined bits. TO (timeout), RUN&lt;/description&gt;
          &lt;addressOffset&gt;0x0&lt;/addressOffset&gt;
          &lt;size&gt;16&lt;/size&gt;
          &lt;access&gt;read-write&lt;/access&gt;
          &lt;resetValue&gt;0x0&lt;/resetValue&gt;
          &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
          &lt;fields&gt;
            &lt;field&gt;&lt;name&gt;TO&lt;/name&gt;
            &lt;description&gt;The TO (timeout) bit is set to 1 when the internal counter reaches zero. Once set by a timeout event, the TO bit stays set until explicitly cleared by a master peripheral. Write zero to the status register to clear the TO bit.&lt;/description&gt;
             &lt;bitOffset&gt;0x0&lt;/bitOffset&gt;
             &lt;bitWidth&gt;1&lt;/bitWidth&gt;
             &lt;access&gt;read-only&lt;/access&gt;
             &lt;readAction&gt;clear&lt;/readAction&gt;
            &lt;/field&gt;
            &lt;field&gt;&lt;name&gt;RUN&lt;/name&gt;
            &lt;description&gt;The RUN bit reads as 1 when the internal counter is running; otherwise this bit reads as 0. The RUN bit is not changed by
 a write operation to the status register.&lt;/description&gt;
             &lt;bitOffset&gt;1&lt;/bitOffset&gt;
             &lt;bitWidth&gt;1&lt;/bitWidth&gt;
             &lt;access&gt;read-only&lt;/access&gt;
            &lt;/field&gt;
            &lt;field&gt;
             &lt;name&gt;Reserved&lt;/name&gt;
             &lt;description&gt;Reserved&lt;/description&gt;
             &lt;bitOffset&gt;2&lt;/bitOffset&gt;
             &lt;bitWidth&gt;14&lt;/bitWidth&gt;
             &lt;access&gt;read-write&lt;/access&gt;
             &lt;parameters&gt;
                 &lt;parameter&gt;
                 &lt;name&gt;Reserved&lt;/name&gt;
                 &lt;value&gt;true&lt;/value&gt;
                 &lt;/parameter&gt;
             &lt;/parameters&gt;
            &lt;/field&gt;
          &lt;/fields&gt;
        &lt;/register&gt; 
        &lt;register&gt;
            &lt;name&gt;control&lt;/name&gt;
            &lt;description&gt;The control register has four defined bits. ITO (Timeout Interrupt), CONT (continue), START, STOP&lt;/description&gt;
            &lt;addressOffset&gt;0x1&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;reset&gt;
                &lt;value&gt;0x0&lt;/value&gt;
            &lt;/reset&gt;
            &lt;field&gt;
                &lt;name&gt;ITO&lt;/name&gt;
                &lt;description&gt;If the ITO bit is 1, the interval timer core generates an IRQ when the status register's TO bit is 1. When the ITO bit is 0, the timer does not generate IRQs.&lt;/description&gt;
                &lt;bitOffset&gt;0&lt;/bitOffset&gt;
                &lt;bitWidth&gt;1&lt;/bitWidth&gt;
                &lt;access&gt;read-write&lt;/access&gt;
            &lt;/field&gt;
            &lt;field&gt;
                &lt;name&gt;CONT&lt;/name&gt;
                &lt;description&gt;The CONT (continuous) bit determines how the internal counter behaves when it reaches zero. If the CONT bit is 1, the counter runs continuously until it is stopped by the STOP bit. If CONT is 0, the counter stops after it reaches zero. When the counter reaches zero, it reloads with the value stored in the period registers, regardless of the CONT bit.&lt;/description&gt;
                &lt;bitOffset&gt;1&lt;/bitOffset&gt;
                &lt;bitWidth&gt;1&lt;/bitWidth&gt;
                &lt;access&gt;read-write&lt;/access&gt;
            &lt;/field&gt;
            &lt;field&gt;
                &lt;name&gt;START&lt;/name&gt;
                &lt;description&gt;Writing a 1 to the START bit starts the internal counter running (counting down). The START bit is an event bit that enables the counter when a write operation is performed. If the timer is stopped, writing a 1 to the START bit causes the timer to restart counting from the number currently stored in its counter. If the timer is already running, writing a 1 to START has no effect. Writing 0 to the START bit has no effect.&lt;/description&gt;
                &lt;bitOffset&gt;2&lt;/bitOffset&gt;
                &lt;bitWidth&gt;1&lt;/bitWidth&gt;
                &lt;access&gt;write-only&lt;/access&gt;
            &lt;/field&gt;
            &lt;field&gt;
                &lt;name&gt;STOP&lt;/name&gt;
                &lt;description&gt;Writing a 1 to the STOP bit stops the internal counter. The STOP bit is an event bit that causes the counter to stop when a write operation is performed. If the timer is already stopped, writing a 1 to STOP has no effect. Writing a 0 to the stop bit has no effect. If the timer hardware is configured with Start/Stop control bits off, writing the STOP bit has no effect.&lt;/description&gt;
                &lt;bitOffset&gt;3&lt;/bitOffset&gt;
                &lt;bitWidth&gt;1&lt;/bitWidth&gt;
                &lt;access&gt;write-only&lt;/access&gt;
            &lt;/field&gt;
            &lt;field&gt;
                &lt;name&gt;Reserved&lt;/name&gt;
                &lt;description&gt;Reserved&lt;/description&gt;
                &lt;bitOffset&gt;4&lt;/bitOffset&gt;
                &lt;bitWidth&gt;12&lt;/bitWidth&gt;
                &lt;access&gt;read-write&lt;/access&gt;
                &lt;parameters&gt;
                    &lt;parameter&gt;
                    &lt;name&gt;Reserved&lt;/name&gt;
                    &lt;value&gt;true&lt;/value&gt;
                    &lt;/parameter&gt;
                &lt;/parameters&gt;
            &lt;/field&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${period_name_0}&lt;/name&gt;
            &lt;description&gt;The period_n registers together store the timeout period value when a write operation to one of the period_n register or the internal counter reaches 0. The timer's actual period is one cycle greater than the value stored in the period_n registers because the counter assumes the value zero for one clock cycle. Writing to one of the period_n registers stops the internal counter, except when the hardware is configured with Start/Stop control bits off. If Start/Stop control bits is off, writing either register does not stop the counter. When the hardware is configured with Writeable period disabled, writing to one of the period_n registers causes the counter to reset to the fixed Timeout Period specified at system generation time.&lt;/description&gt;
            &lt;addressOffset&gt;0x2&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;${period_name_0_reset_value}&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${period_name_1}&lt;/name&gt;
            &lt;description&gt;&lt;/description&gt;
            &lt;addressOffset&gt;0x3&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;${period_name_1_reset_value}&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${period_snap_0}&lt;/name&gt;
            &lt;description&gt;&lt;/description&gt;
            &lt;addressOffset&gt;0x4&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;${period_snap_0_reset_value}&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${period_snap_1}&lt;/name&gt;
            &lt;description&gt;&lt;/description&gt;
            &lt;addressOffset&gt;0x5&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;${period_snap_1_reset_value}&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${snap_0}&lt;/name&gt;
            &lt;description&gt;A master peripheral may request a coherent snapshot of the current internal counter by performing a write operation (write-data ignored) to one of the snap_n registers. When a write occurs, the value of the counter is copied to snap_n registers. The snapshot occurs whether or not the counter is running. Requesting a snapshot does not change the internal counter's operation.&lt;/description&gt;
            &lt;addressOffset&gt;0x6&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;0x0&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${snap_1}&lt;/name&gt;
            &lt;description&gt;&lt;/description&gt;
            &lt;addressOffset&gt;0x7&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;0x0&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${snap_2}&lt;/name&gt;
            &lt;description&gt;&lt;/description&gt;
            &lt;addressOffset&gt;0x8&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;0x0&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
        &lt;register&gt;
            &lt;name&gt;${snap_3}&lt;/name&gt;
            &lt;description&gt;&lt;/description&gt;
            &lt;addressOffset&gt;0x9&lt;/addressOffset&gt;
            &lt;size&gt;16&lt;/size&gt;
            &lt;access&gt;read-write&lt;/access&gt;
            &lt;resetValue&gt;0x0&lt;/resetValue&gt;
            &lt;resetMask&gt;0xffff&lt;/resetMask&gt;
        &lt;/register&gt;
    &lt;/registers&gt;
   &lt;/peripheral&gt;
  &lt;/peripherals&gt;
&lt;/device&gt; </cmsisSrcFileContents>
                    <addressGroup></addressGroup>
                    <cmsisVars>
                        <entry>
                            <key>period_name_1_reset_value</key>
                            <value>0x393</value>
                        </entry>
                        <entry>
                            <key>snap_0</key>
                            <value>Reserved</value>
                        </entry>
                        <entry>
                            <key>period_name_0_reset_value</key>
                            <value>0x86ff</value>
                        </entry>
                        <entry>
                            <key>snap_2</key>
                            <value>Reserved</value>
                        </entry>
                        <entry>
                            <key>snap_1</key>
                            <value>Reserved</value>
                        </entry>
                        <entry>
                            <key>snap_3</key>
                            <value>Reserved</value>
                        </entry>
                        <entry>
                            <key>period_name_0</key>
                            <value>periodl</value>
                        </entry>
                        <entry>
                            <key>period_name_1</key>
                            <value>periodh</value>
                        </entry>
                        <entry>
                            <key>period_snap_1</key>
                            <value>snaph</value>
                        </entry>
                        <entry>
                            <key>period_snap_1_reset_value</key>
                            <value>0x0</value>
                        </entry>
                        <entry>
                            <key>period_snap_0_reset_value</key>
                            <value>0x0</value>
                        </entry>
                        <entry>
                            <key>period_snap_0</key>
                            <value>snapl</value>
                        </entry>
                    </cmsisVars>
                </cmsisInfo>
            </interface>
            <interface>
                <name>irq</name>
                <type>interrupt</type>
                <isStart>false</isStart>
                <ports>
                    <port>
                        <name>irq</name>
                        <role>irq</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedAddressablePoint</key>
                            <value>wd_timer.s1</value>
                        </entry>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedReset</key>
                            <value>reset</value>
                        </entry>
                        <entry>
                            <key>bridgedReceiverOffset</key>
                            <value>0</value>
                        </entry>
                        <entry>
                            <key>bridgesToReceiver</key>
                        </entry>
                        <entry>
                            <key>irqScheme</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
            <interface>
                <name>resetrequest</name>
                <type>reset</type>
                <isStart>true</isStart>
                <ports>
                    <port>
                        <name>resetrequest</name>
                        <role>reset</role>
                        <direction>Output</direction>
                        <width>1</width>
                        <lowerBound>0</lowerBound>
                        <vhdlType>STD_LOGIC</vhdlType>
                    </port>
                </ports>
                <assignments>
                    <assignmentValueMap/>
                </assignments>
                <parameters>
                    <parameterValueMap>
                        <entry>
                            <key>associatedClock</key>
                            <value>clk</value>
                        </entry>
                        <entry>
                            <key>associatedDirectReset</key>
                        </entry>
                        <entry>
                            <key>associatedResetSinks</key>
                            <value>none</value>
                        </entry>
                        <entry>
                            <key>synchronousEdges</key>
                            <value>NONE</value>
                        </entry>
                    </parameterValueMap>
                </parameters>
            </interface>
        </interfaces>
    </boundary>
    <originalModuleInfo>
        <className>altera_avalon_timer</className>
        <version>18.1</version>
        <displayName>Interval Timer Intel FPGA IP</displayName>
    </originalModuleInfo>
    <systemInfoParameterDescriptors>
        <descriptors>
            <descriptor>
                <parameterDefaultValue>0</parameterDefaultValue>
                <parameterName>systemFrequency</parameterName>
                <parameterType>java.lang.Long</parameterType>
                <systemInfoArgs>clk</systemInfoArgs>
                <systemInfotype>CLOCK_RATE</systemInfotype>
            </descriptor>
        </descriptors>
    </systemInfoParameterDescriptors>
    <systemInfos>
        <connPtSystemInfos>
            <entry>
                <key>clk</key>
                <value>
                    <connectionPointName>clk</connectionPointName>
                    <suppliedSystemInfos/>
                    <consumedSystemInfos>
                        <entry>
                            <key>CLOCK_RATE</key>
                            <value>100000000</value>
                        </entry>
                    </consumedSystemInfos>
                </value>
            </entry>
            <entry>
                <key>s1</key>
                <value>
                    <connectionPointName>s1</connectionPointName>
                    <suppliedSystemInfos>
                        <entry>
                            <key>ADDRESS_MAP</key>
                            <value>&lt;address-map&gt;&lt;slave name='s1' start='0x0' end='0x20' datawidth='16' /&gt;&lt;/address-map&gt;</value>
                        </entry>
                        <entry>
                            <key>ADDRESS_WIDTH</key>
                            <value>5</value>
                        </entry>
                        <entry>
                            <key>MAX_SLAVE_DATA_WIDTH</key>
                            <value>16</value>
                        </entry>
                    </suppliedSystemInfos>
                    <consumedSystemInfos/>
                </value>
            </entry>
        </connPtSystemInfos>
    </systemInfos>
</componentDefinition>]]></parameter>
  <parameter name="generationInfoDefinition"><![CDATA[<generationInfoDefinition>
    <hdlLibraryName>nios_wd_timer</hdlLibraryName>
    <fileSets>
        <fileSet>
            <fileSetName>nios_wd_timer</fileSetName>
            <fileSetFixedName>nios_wd_timer</fileSetFixedName>
            <fileSetKind>QUARTUS_SYNTH</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_wd_timer</fileSetName>
            <fileSetFixedName>nios_wd_timer</fileSetFixedName>
            <fileSetKind>SIM_VERILOG</fileSetKind>
            <fileSetFiles/>
        </fileSet>
        <fileSet>
            <fileSetName>nios_wd_timer</fileSetName>
            <fileSetFixedName>nios_wd_timer</fileSetFixedName>
            <fileSetKind>SIM_VHDL</fileSetKind>
            <fileSetFiles/>
        </fileSet>
    </fileSets>
</generationInfoDefinition>]]></parameter>
  <parameter name="hlsFile" value="" />
  <parameter name="logicalView">ip/nios/nios_wd_timer.ip</parameter>
  <parameter name="moduleAssignmentDefinition"><![CDATA[<assignmentDefinition>
    <assignmentValueMap>
        <entry>
            <key>embeddedsw.CMacro.ALWAYS_RUN</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.COUNTER_SIZE</key>
            <value>32</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FIXED_PERIOD</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.FREQ</key>
            <value>100000000</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.LOAD_VALUE</key>
            <value>59999999</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.MULT</key>
            <value>0.001</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.PERIOD</key>
            <value>600</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.PERIOD_UNITS</key>
            <value>ms</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.RESET_OUTPUT</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.SNAPSHOT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.TICKS_PER_SEC</key>
            <value>1</value>
        </entry>
        <entry>
            <key>embeddedsw.CMacro.TIMEOUT_PULSE_OUTPUT</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.compatible</key>
            <value>altr,timer-1.0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.group</key>
            <value>timer</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.name</key>
            <value>timer</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.params.clock-frequency</key>
            <value>0</value>
        </entry>
        <entry>
            <key>embeddedsw.dts.vendor</key>
            <value>altr</value>
        </entry>
    </assignmentValueMap>
</assignmentDefinition>]]></parameter>
  <parameter name="svInterfaceDefinition" value="" />
 </module>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="jtag_uart_0.avalon_jtag_slave">
  <parameter name="baseAddress" value="0x000428f8" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_iopll_rcfg_mgmt_translator.avalon_universal_slave_0">
  <parameter name="baseAddress" value="0x00042000" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_pll_rcfg_mgmt_translator.avalon_universal_slave_0">
  <parameter name="baseAddress" value="0x00040000" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_pma_rcfg_mgmt_translator.avalon_universal_slave_0">
  <parameter name="baseAddress" value="0x0000" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="edid_ram_slave_translator.avalon_universal_slave_0">
  <parameter name="baseAddress" value="0x00042c00" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="oc_i2c_master_av_slave_translator.avalon_universal_slave_0">
  <parameter name="baseAddress" value="0x00042820" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="oc_i2c_master_ti.avalon_universal_slave_0">
  <parameter name="baseAddress" value="0x00043120" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="sysid_qsys_0.control_slave">
  <parameter name="baseAddress" value="0x000428f0" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="cpu.debug_mem_slave">
  <parameter name="baseAddress" value="0x00041800" />
 </connection>
 <connection kind="avalon" version="18.1" start="cpu.data_master" end="cpu_ram.s1">
  <parameter name="baseAddress" value="0x00020000" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="edid_ram_access_pio.s1">
  <parameter name="baseAddress" value="0x00043000" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="measure_pio.s1">
  <parameter name="baseAddress" value="0x000428e0" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_os_pio.s1">
  <parameter name="baseAddress" value="0x000428d0" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="measure_valid_pio.s1">
  <parameter name="baseAddress" value="0x000428c0" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_rst_pll_pio.s1">
  <parameter name="baseAddress" value="0x000428b0" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_rst_xcvr_pio.s1">
  <parameter name="baseAddress" value="0x000428a0" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tmds_bit_clock_ratio_pio.s1">
  <parameter name="baseAddress" value="0x00042890" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_iopll_waitrequest_pio.s1">
  <parameter name="baseAddress" value="0x00042880" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_pll_waitrequest_pio.s1">
  <parameter name="baseAddress" value="0x00042870" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_pma_ch.s1">
  <parameter name="baseAddress" value="0x00042930" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_pma_cal_busy_pio.s1">
  <parameter name="baseAddress" value="0x00042920" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_rcfg_en_pio.s1">
  <parameter name="baseAddress" value="0x00042900" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_pma_waitrequest_pio.s1">
  <parameter name="baseAddress" value="0x00042910" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="wd_timer.s1">
  <parameter name="baseAddress" value="0x00042800" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_hpd_req_pio.s1">
  <parameter name="baseAddress" value="0x00042860" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="tx_hpd_ack_pio.s1">
  <parameter name="baseAddress" value="0x00042850" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.data_master"
   end="color_depth_pio.s1">
  <parameter name="baseAddress" value="0x00042840" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.instruction_master"
   end="cpu.debug_mem_slave">
  <parameter name="baseAddress" value="0x00041800" />
 </connection>
 <connection
   kind="avalon"
   version="18.1"
   start="cpu.instruction_master"
   end="cpu_ram.s1">
  <parameter name="baseAddress" value="0x00020000" />
 </connection>
 <connection kind="clock" version="18.1" start="cpu_clk.clk" end="cpu.clk" />
 <connection kind="clock" version="18.1" start="cpu_clk.clk" end="jtag_uart_0.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="sysid_qsys_0.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="measure_valid_pio.clk" />
 <connection kind="clock" version="18.1" start="cpu_clk.clk" end="measure_pio.clk" />
 <connection kind="clock" version="18.1" start="cpu_clk.clk" end="tx_os_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_rst_xcvr_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_rst_pll_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tmds_bit_clock_ratio_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_iopll_waitrequest_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_pll_waitrequest_pio.clk" />
 <connection kind="clock" version="18.1" start="cpu_clk.clk" end="tx_pma_ch.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_pma_cal_busy_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_rcfg_en_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_pma_waitrequest_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_pll_rcfg_mgmt_translator.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_pma_rcfg_mgmt_translator.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_iopll_rcfg_mgmt_translator.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="edid_ram_slave_translator.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="edid_ram_access_pio.clk" />
 <connection kind="clock" version="18.1" start="cpu_clk.clk" end="wd_timer.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_hpd_req_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="tx_hpd_ack_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="color_depth_pio.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="oc_i2c_master_av_slave_translator.clk" />
 <connection
   kind="clock"
   version="18.1"
   start="cpu_clk.clk"
   end="oc_i2c_master_ti.clk" />
 <connection kind="clock" version="18.1" start="cpu_clk.clk" end="cpu_ram.clk1" />
 <connection kind="interrupt" version="18.1" start="cpu.irq" end="jtag_uart_0.irq" />
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="tmds_bit_clock_ratio_pio.irq">
  <parameter name="irqNumber" value="2" />
 </connection>
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="tx_iopll_waitrequest_pio.irq">
  <parameter name="irqNumber" value="3" />
 </connection>
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="tx_pll_waitrequest_pio.irq">
  <parameter name="irqNumber" value="4" />
 </connection>
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="measure_valid_pio.irq">
  <parameter name="irqNumber" value="5" />
 </connection>
 <connection kind="interrupt" version="18.1" start="cpu.irq" end="measure_pio.irq">
  <parameter name="irqNumber" value="6" />
 </connection>
 <connection kind="interrupt" version="18.1" start="cpu.irq" end="wd_timer.irq">
  <parameter name="irqNumber" value="1" />
 </connection>
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="tx_hpd_req_pio.irq">
  <parameter name="irqNumber" value="8" />
 </connection>
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="color_depth_pio.irq">
  <parameter name="irqNumber" value="9" />
 </connection>
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="tx_pma_waitrequest_pio.irq">
  <parameter name="irqNumber" value="10" />
 </connection>
 <connection
   kind="interrupt"
   version="18.1"
   start="cpu.irq"
   end="tx_pma_cal_busy_pio.irq">
  <parameter name="irqNumber" value="12" />
 </connection>
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="jtag_uart_0.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="sysid_qsys_0.reset" />
 <connection kind="reset" version="18.1" start="cpu_clk.clk_reset" end="cpu.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tmds_bit_clock_ratio_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="measure_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="measure_valid_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_iopll_waitrequest_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_pll_waitrequest_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_pma_ch.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_pma_cal_busy_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_rcfg_en_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_pma_waitrequest_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_rst_xcvr_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_rst_pll_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_os_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_iopll_rcfg_mgmt_translator.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_pll_rcfg_mgmt_translator.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_pma_rcfg_mgmt_translator.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="edid_ram_slave_translator.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="edid_ram_access_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="wd_timer.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_hpd_req_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="tx_hpd_ack_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="color_depth_pio.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="oc_i2c_master_av_slave_translator.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="oc_i2c_master_ti.reset" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu_clk.clk_reset"
   end="cpu_ram.reset1" />
 <connection
   kind="reset"
   version="18.1"
   start="cpu.debug_reset_request"
   end="cpu.reset" />
 <interconnectRequirement for="$system" name="qsys_mm.clockCrossingAdapter" value="AUTO" />
 <interconnectRequirement for="$system" name="qsys_mm.enableEccProtection" value="FALSE" />
 <interconnectRequirement for="$system" name="qsys_mm.insertDefaultSlave" value="false" />
 <interconnectRequirement for="$system" name="qsys_mm.maxAdditionalLatency" value="1" />
</system>
