// hdmi_tx_altera_hdmi_181_p666vtq.v

// This file was auto-generated from altera_hdmi_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1 222

`timescale 1 ps / 1 ps
module hdmi_tx_altera_hdmi_181_p666vtq #(
		parameter FAMILY               = "Cyclone 10 GX",
		parameter SYMBOLS_PER_CLOCK    = 2,
		parameter SUPPORT_AUXILIARY    = 0,
		parameter SUPPORT_DEEP_COLOR   = 0,
		parameter SUPPORT_AUDIO        = 0,
		parameter SUPPORT_32CHAN_AUDIO = 0
	) (
		input  wire                              reset,                //                reset.export
		input  wire                              vid_clk,              //              vid_clk.export
		input  wire                              ls_clk,               //               ls_clk.export
		input  wire                              mode,                 //                 mode.export
		input  wire [(1*SYMBOLS_PER_CLOCK)-1:0]  vid_de,               //               vid_de.export
		input  wire [(48*SYMBOLS_PER_CLOCK)-1:0] vid_data,             //             vid_data.export
		input  wire [(1*SYMBOLS_PER_CLOCK)-1:0]  vid_hsync,            //            vid_hsync.export
		input  wire [(1*SYMBOLS_PER_CLOCK)-1:0]  vid_vsync,            //            vid_vsync.export
		output wire [(10*SYMBOLS_PER_CLOCK)-1:0] out_b,                //                out_b.export
		output wire [(10*SYMBOLS_PER_CLOCK)-1:0] out_r,                //                out_r.export
		output wire [(10*SYMBOLS_PER_CLOCK)-1:0] out_g,                //                out_g.export
		output wire [(10*SYMBOLS_PER_CLOCK)-1:0] out_c,                //                out_c.export
		input  wire                              Scrambler_Enable,     //     Scrambler_Enable.export
		input  wire                              TMDS_Bit_clock_Ratio, // TMDS_Bit_clock_Ratio.export
		input  wire [(6*SYMBOLS_PER_CLOCK)-1:0]  ctrl                  //                 ctrl.export
	);

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (FAMILY != "Cyclone 10 GX")
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					family_check ( .error(1'b1) );
		end
		if (SYMBOLS_PER_CLOCK != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					symbols_per_clock_check ( .error(1'b1) );
		end
		if (SUPPORT_AUXILIARY != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					support_auxiliary_check ( .error(1'b1) );
		end
		if (SUPPORT_DEEP_COLOR != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					support_deep_color_check ( .error(1'b1) );
		end
		if (SUPPORT_AUDIO != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					support_audio_check ( .error(1'b1) );
		end
		if (SUPPORT_32CHAN_AUDIO != 0)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					support_32chan_audio_check ( .error(1'b1) );
		end
	endgenerate

	bitec_hdmi_tx #(
		.SYMBOLS_PER_CLOCK    (2),
		.SUPPORT_AUXILIARY    (0),
		.SUPPORT_DEEP_COLOR   (0),
		.SUPPORT_AUDIO        (0),
		.SUPPORT_32CHAN_AUDIO (0)
	) u_bitec_hdmi_tx (
		.reset                (reset),                                                                                                                                                                                                                                                                 //   input,   width = 1,                reset.export
		.vid_clk              (vid_clk),                                                                                                                                                                                                                                                               //   input,   width = 1,              vid_clk.export
		.ls_clk               (ls_clk),                                                                                                                                                                                                                                                                //   input,   width = 1,               ls_clk.export
		.mode                 (mode),                                                                                                                                                                                                                                                                  //   input,   width = 1,                 mode.export
		.vid_de               (vid_de),                                                                                                                                                                                                                                                                //   input,   width = 2,               vid_de.export
		.vid_data             (vid_data),                                                                                                                                                                                                                                                              //   input,  width = 96,             vid_data.export
		.vid_hsync            (vid_hsync),                                                                                                                                                                                                                                                             //   input,   width = 2,            vid_hsync.export
		.vid_vsync            (vid_vsync),                                                                                                                                                                                                                                                             //   input,   width = 2,            vid_vsync.export
		.out_b                (out_b),                                                                                                                                                                                                                                                                 //  output,  width = 20,                out_b.export
		.out_r                (out_r),                                                                                                                                                                                                                                                                 //  output,  width = 20,                out_r.export
		.out_g                (out_g),                                                                                                                                                                                                                                                                 //  output,  width = 20,                out_g.export
		.out_c                (out_c),                                                                                                                                                                                                                                                                 //  output,  width = 20,                out_c.export
		.Scrambler_Enable     (Scrambler_Enable),                                                                                                                                                                                                                                                      //   input,   width = 1,     Scrambler_Enable.export
		.TMDS_Bit_clock_Ratio (TMDS_Bit_clock_Ratio),                                                                                                                                                                                                                                                  //   input,   width = 1, TMDS_Bit_clock_Ratio.export
		.ctrl                 (ctrl),                                                                                                                                                                                                                                                                  //   input,  width = 12,                 ctrl.export
		.aux_ready            (),                                                                                                                                                                                                                                                                      // (terminated),                                   
		.aux_valid            (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.aux_data             (72'b000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                          // (terminated),                                   
		.aux_sop              (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.aux_eop              (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.gcp                  (6'b000000),                                                                                                                                                                                                                                                             // (terminated),                                   
		.info_avi             (113'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                // (terminated),                                   
		.info_vsi             (62'b00000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                                    // (terminated),                                   
		.audio_clk            (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.audio_CTS            (20'b00000000000000000000),                                                                                                                                                                                                                                              // (terminated),                                   
		.audio_N              (20'b00000000000000000000),                                                                                                                                                                                                                                              // (terminated),                                   
		.audio_data           (256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.audio_de             (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.audio_mute           (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.audio_info_ai        (49'b0000000000000000000000000000000000000000000000000),                                                                                                                                                                                                                 // (terminated),                                   
		.audio_metadata       (166'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                           // (terminated),                                   
		.audio_format         (5'b00000),                                                                                                                                                                                                                                                              // (terminated),                                   
		.version              (),                                                                                                                                                                                                                                                                      // (terminated),                                   
		.AKeys                (56'b00000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                                          // (terminated),                                   
		.AKeys_sel            (),                                                                                                                                                                                                                                                                      // (terminated),                                   
		.AKeys_ksv            (40'b0000000000000000000000000000000000000000),                                                                                                                                                                                                                          // (terminated),                                   
		.hdcp_mm_clk          (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.hdcp_mm_addr         (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                                   
		.hdcp_mm_rdata        (),                                                                                                                                                                                                                                                                      // (terminated),                                   
		.hdcp_mm_wdata        (32'b00000000000000000000000000000000),                                                                                                                                                                                                                                  // (terminated),                                   
		.hdcp_mm_r            (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.hdcp_mm_w            (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.hdcp_enable          (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.rsa_clk              (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                                   
		.hdcp_mm_wait         (),                                                                                                                                                                                                                                                                      // (terminated),                                   
		.hdcp_kmem_dat        (32'b00000000000000000000000000000000),                                                                                                                                                                                                                                  // (terminated),                                   
		.hdcp_kmem_add        (),                                                                                                                                                                                                                                                                      // (terminated),                                   
		.hdcp_kmem_rd         (),                                                                                                                                                                                                                                                                      // (terminated),                                   
		.hdcp_kmem_wait       (1'b0)                                                                                                                                                                                                                                                                   // (terminated),                                   
	);

endmodule
