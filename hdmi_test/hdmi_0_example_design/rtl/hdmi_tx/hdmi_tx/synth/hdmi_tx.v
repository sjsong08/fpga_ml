// hdmi_tx.v

// Generated using ACDS version 18.1 222

`timescale 1 ps / 1 ps
module hdmi_tx (
		input  wire        reset,                //                reset.export
		input  wire        vid_clk,              //              vid_clk.export
		input  wire        ls_clk,               //               ls_clk.export
		input  wire        mode,                 //                 mode.export
		input  wire [1:0]  vid_de,               //               vid_de.export
		input  wire [95:0] vid_data,             //             vid_data.export
		input  wire [1:0]  vid_hsync,            //            vid_hsync.export
		input  wire [1:0]  vid_vsync,            //            vid_vsync.export
		output wire [19:0] out_b,                //                out_b.export
		output wire [19:0] out_r,                //                out_r.export
		output wire [19:0] out_g,                //                out_g.export
		output wire [19:0] out_c,                //                out_c.export
		input  wire        Scrambler_Enable,     //     Scrambler_Enable.export
		input  wire        TMDS_Bit_clock_Ratio, // TMDS_Bit_clock_Ratio.export
		input  wire [11:0] ctrl                  //                 ctrl.export
	);

	hdmi_tx_altera_hdmi_181_p666vtq #(
		.FAMILY               ("Cyclone 10 GX"),
		.SYMBOLS_PER_CLOCK    (2),
		.SUPPORT_AUXILIARY    (0),
		.SUPPORT_DEEP_COLOR   (0),
		.SUPPORT_AUDIO        (0),
		.SUPPORT_32CHAN_AUDIO (0)
	) hdmi_tx (
		.reset                (reset),                //   input,   width = 1,                reset.export
		.vid_clk              (vid_clk),              //   input,   width = 1,              vid_clk.export
		.ls_clk               (ls_clk),               //   input,   width = 1,               ls_clk.export
		.mode                 (mode),                 //   input,   width = 1,                 mode.export
		.vid_de               (vid_de),               //   input,   width = 2,               vid_de.export
		.vid_data             (vid_data),             //   input,  width = 96,             vid_data.export
		.vid_hsync            (vid_hsync),            //   input,   width = 2,            vid_hsync.export
		.vid_vsync            (vid_vsync),            //   input,   width = 2,            vid_vsync.export
		.out_b                (out_b),                //  output,  width = 20,                out_b.export
		.out_r                (out_r),                //  output,  width = 20,                out_r.export
		.out_g                (out_g),                //  output,  width = 20,                out_g.export
		.out_c                (out_c),                //  output,  width = 20,                out_c.export
		.Scrambler_Enable     (Scrambler_Enable),     //   input,   width = 1,     Scrambler_Enable.export
		.TMDS_Bit_clock_Ratio (TMDS_Bit_clock_Ratio), //   input,   width = 1, TMDS_Bit_clock_Ratio.export
		.ctrl                 (ctrl)                  //   input,  width = 12,                 ctrl.export
	);

endmodule
